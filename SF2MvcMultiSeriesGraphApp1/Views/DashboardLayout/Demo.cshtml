@using Syncfusion.EJ2.Maps
@using Syncfusion.EJ2.Charts;
@model SyncfusionMvcDashboardLayoutApplication1.Models.spacingModel
@section ControlsSection{
    <div class="control-section">
        <div class="col-lg-12 col-sm-12 col-md-12" id="sidebar-section">
            <div id="head">
                <div class="header">
                    <div class="menu"><span class="e-icons expand"></span></div>
                    <div class="searchContent">
                        <div class="analysis">Dashboard - Layout</div>
                    </div>
                    @*<div class="right-content">
                        <div class="information">
                            <span class="e-avatar e-avatar-medium e-avatar-circle image"></span>
                            <div class="text-content">John</div>
                        </div>
                    </div>*@
                </div>
            </div>
            <!-- sidebar element declaration -->
            @*@Html.EJS().Sidebar("dockSidebar").Type(Syncfusion.EJ2.Navigations.SidebarType.Over).EnableDock(true).DockSize("60px").Target("#target").CloseOnDocumentClick(true).ContentTemplate(@<div>
        <div class="content-area">
            <div class="dock">
                <ul>
                    <li class="sidebar-item"><span class="e-icons home"></span></li>
                    <li class="sidebar-item filterHover">
                        <span class="e-icons filter"></span>
                    </li>
                    <li class="sidebar-item">
                        <span class="e-icons analyticsChart"></span>
                    </li>
                    <li class="sidebar-item"><span class="e-icons settings"></span></li>
                    <li class="sidebar-item">
                        <span class="e-icons analytics"></span>
                    </li>
                </ul>
            </div>
        </div>
    </div>).Render()*@
            <!-- end of sidebar element -->
            <!-- main content declaration -->
            <div id="target">
                <div class="sidebar-content">
                    <div class="dashboardParent">
                        @Html.EJS().DashboardLayout("editLayout").Columns(6).CellSpacing(Model.cellSpacing).Panels(Panel =>
                   {
                       @*Panel.SizeX(2).SizeY(1).Row(0).Col(0).ContentTemplate(@<div>
                        <div class="e-panel-container">
                            <div class="e-panel-content">
                                <div class="card">
                                    <span class="e-icons session"></span>
                                    <div class="card-content text">
                                        Session
                                    </div>
                                    <div class="card-content number">
                                        124,444
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>).Add();
                       Panel.SizeX(2).SizeY(1).Row(0).Col(2).ContentTemplate(@<div>
                                <div class="e-panel-container">
                                    <div class="e-panel-content">
                                        <div class="card">
                                            <span class="e-icons profile"></span>
                                            <div class="card-content text">
                                                Users
                                            </div>
                                            <div class="card-content number">
                                                64,496
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>).Add();*@
                       @*Panel.SizeX(2).SizeY(1).Row(0).Col(4).ContentTemplate(@<div>
                                <div class="e-panel-container">
                                    <div class="e-panel-content">
                                        <div class="card">
                                            <span class="e-icons views"></span>
                                            <div class="card-content text">
                                                Views
                                            </div>
                                            <div class="card-content number">
                                                442,278
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>).Add();*@
                       Panel.SizeX(2).SizeY(2).Row(1).Col(0).ContentTemplate(@<div>
                                <div class="e-panel-container">
                                    <div class="e-panel-header">
                                        <div>Active Visitors</div>
                                    </div>
                                    <div class="e-panel-content">
                                        @(Html.EJS().AccumulationChart("pie1").Series(series =>
                                {
                                    series.DataLabel(dl => dl.Visible(true).Name("value").Position(Syncfusion.EJ2.Charts.AccumulationLabelPosition.Inside).Font(font => font.Size("16px").FontWeight("600").Color("white"))).InnerRadius("35%")
                                             .XName("Device").YName("Amount").Name("Revenue").Type(Syncfusion.EJ2.Charts.AccumulationType.Pie).Radius("100%").StartAngle(0).Palettes(ViewBag.pallets).EndAngle(360)
                                             .Explode(false).DataSource(ViewBag.PieData1).Add();
                                })
                                .EnableSmartLabels(true).EnableAnimation(false).Width("100%").Height("100%").LegendSettings(ls => ls.Visible(false).ToggleVisibility(false)).Tooltip(tp => tp.Enable(true).Header("<b>${point.x}</b>").Format("Composition : <b>${point.y}%</b>"))
                                              .Load("loadPiechart").Render())
                                    </div>
                                </div>
                            </div>).Add();

                       Panel.SizeX(2).SizeY(2).Row(1).Col(2).ContentTemplate(@<div>
                         <div class="e-panel-container">
                             <div class="e-panel-header">
                                 <div>Regional Maps</div>
                             </div>
                             <div class="e-panel-content">
                                 <div style="height:100%;width:100%;display:block">
                                     @Html.EJS().Maps("maps").Height("100%").Width("100%").Load("mapsLoad").Layers(layer =>
    {
        layer.DataSource(ViewBag.dataSource).ShapeDataPath("continent")
        .ShapePropertyPath("continent").ShapeSettings(new MapsShapeSettings { ColorValuePath = "color" })
        .ShapeData(ViewBag.shapeData).Add();
    }).Render()
                                        </div>
                                    </div>
                                </div>
                            </div>).Add();

                       Panel.SizeX(2).SizeY(2).Row(1).Col(4).ContentTemplate(@<div>
                                <div class="e-panel-container">
                                    <div class="e-panel-header">
                                        <div>Visitors by Type</div>
                                    </div>
                                    <div class="e-panel-content">
                                        @(Html.EJS().Chart("linechart").Series(series =>
                                                                       {
                                                                           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column)
                                                                                    .Marker(mr => mr.DataLabel(dl => dl.Visible(false))).XName("x")
                                                                                    .YName("y").DataSource(ViewBag.columnData).Name("Desktop").Width(2).Add();
                                                                           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column)
                                                                                     .Marker(mr => mr.DataLabel(dl => dl.Visible(false))).XName("x").YName("y").Fill("#db3673c4").DataSource(ViewBag.columnData1)
                                                                                    .Name("Mobil").Width(2).Add();
                                                                           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column)
                                                                                     .Marker(mr => mr.DataLabel(dl => dl.Visible(false))).XName("x")
                                                                                     .YName("y").DataSource(ViewBag.columnData2).Name("Tablet").Width(2).Add();

                                                                       }).PrimaryYAxis(px => px.LabelStyle(ls => ls.Color("transparent")).LineStyle(ls => ls.Width(0)).MajorTickLines(mg => mg.Width(0))
                                                                  .MajorGridLines(mg => mg.Width(0))
                                                                              ).PrimaryXAxis(px => px.Interval(1)
                                                                              .ValueType(Syncfusion.EJ2.Charts.ValueType.Category).MajorGridLines(mg => mg.Width(0))
                                                                              ).Tooltip(tt => tt.Enable(true)).ChartArea(area => area.Border(br => br.Color("transparent"))
                                                                              ).LegendSettings(lg => lg.Visible(false)).Load("loadLinechart").Render())
                                    </div>
                                </div>
                            </div>).Add();
                       Panel.SizeX(4).SizeY(2).Row(3).Col(2).ContentTemplate(@<div>
                                <div class="e-panel-container">
                                    <div class="e-panel-header">
                                        <div>Traffic Histor</div>
                                    </div>
                                    <div class="e-panel-content">
                                        @(Html.EJS().Chart("spline").Series(series =>
                                                             {
                                                                 series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.SplineArea).Fill("rgb(239, 183, 202)").Opacity(0.5).XName("x").YName("y").DataSource(ViewBag.LineData).Name("Jan").Add();
                                                                 series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.SplineArea).Fill("rgb(14, 64, 152, .6)").Opacity(0.5).XName("x").YName("y").DataSource(ViewBag.LineData1).Name("Feb").Add();

                                                             }).PrimaryXAxis(px => px.LabelIntersectAction(Syncfusion.EJ2.Charts.LabelIntersectAction.Rotate90)
                                                        .MajorGridLines(mg => mg.Width(0)).EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)
                                                        .ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime).IntervalType(Syncfusion.EJ2.Charts.IntervalType.Months).LabelFormat("MMM")
                                                                          ).PrimaryYAxis(py => py.LabelFormat("{value}%").MajorTickLines(mt => mt.Width(0)).MinorTickLines(mt => mt.Width(0)).LineStyle(ls => ls.Width(0))
                                                                          ).ChartArea(area => area.Border(br => br.Color("transparent"))).Load("loadLinechart").Render())
                                    </div>
                                </div>
                            </div>).Add();
                       Panel.SizeX(2).SizeY(2).Row(3).Col(0).ContentTemplate(@<div>
                                <div class="e-panel-container">
                                    <div class="e-panel-header">
                                        <div>Useage Statistics</div>
                                    </div>
                                    <div class="e-panel-content">
                                        @(Html.EJS().AccumulationChart("pie").Series(series =>
                                             {
                                                 series.DataLabel(dl => dl.Visible(true).Name("text").Position(Syncfusion.EJ2.Charts.AccumulationLabelPosition.Inside).Font(font => font.Color("white").FontWeight("600")))
                                                                       .XName("x").YName("y").Name("Revenue").Type(Syncfusion.EJ2.Charts.AccumulationType.Pie).Radius("100%")
                                                                       .StartAngle(0).EndAngle(360).Explode(true).ExplodeIndex(2).ExplodeOffset("10%").DataSource(ViewBag.pieData).Add();
                                             }).EnableSmartLabels(true).EnableAnimation(false).LegendSettings(ls => ls.Visible(false).ToggleVisibility(false))
                                                        .Tooltip(tp => tp.Enable(true).Header("<b>${point.x}</b>").Format("Composition : <b>${point.y}%</b>"))
                                                        .Load("loadPiechart").Render())
                                    </div>
                                </div>
                            </div>).Add();
                   }).Render()
                    </div>
                </div>
            </div>
            <!--end of main content declaration -->
        </div>
    </div>

    <div id="content"></div>
}

<style>

    .sidebar-content {
      padding: 10px;
      width: calc(100% - 60px);
    }

    .header {
      border-bottom: 1px solid rgba(0, 0, 0, 0.12);
      height: 55px;
      position: relative;
    }

    .e-dashboardlayout.e-control .e-panel .e-panel-container .e-panel-header {
      padding: 10px;
      border-bottom: 2px solid #e6e9ed !important;
      height: 35px;
      margin: 0 15px 0 15px;
    }

    #sidebar-section {
      padding: 0px !important;
      border: 1px solid rgba(0, 0, 0, 0.12);
    }

    .e-bigger #search {
      display: none;
    }

    @@media (max-width: 650px) {
      .e-bigger .searchContent {
        display: none;
      }
      .information{
          right:17% !important;
      }

      #pie, #spline, #linechart, #pie1{
          width: 100% !important;
          height: 100% !important;
      }
    }

    #maps{
        display:block;
        height:100%;
        width:100%
    }

    @@font-face {
      font-family: "e-sb-icons";
      src: url(data:application/x-font-ttf;charset=utf-8;base64,)
        format("truetype");
      font-weight: normal;
      font-style: normal;
    }

    .e-panel-content,e-panel-container {
        display: block;
    }

    [class^="sf-icon-"],
    [class*=" sf-icon-"] {
      font-family: "e-sb-icons" !important;
      speak: none;
      font-size: 55px;
      font-style: normal;
      font-weight: normal;
      font-variant: normal;
      text-transform: none;
      line-height: 1;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }

    #dockSidebar {
      text-align: center;
    }

    .e-icons::before {
      font-size: 20px;
    }

    li.sidebar-item.filterHover {
      background: #eef4f7;
      border-left: 4px solid #057ece;
    }
    /* dockbar icon Style */

    .home::before {
      content: "\e718";
      font-family: "e-sb-icons";
    }

    .filter::before {
      content: "\e72a";
      font-family: "e-sb-icons";
    }

    .analyticsChart::before {
      content: "\e722";
      font-family: "e-sb-icons";
    }

    .analytics::before {
      content: "\e720";
      font-family: "e-sb-icons";
    }

    .session::before {
      content: "\e735";
      font-family: "e-sb-icons";
    }

    .profile::before {
      content: "\e730";
      font-family: "e-sb-icons";
    }

    .views::before {
      content: "\e733";
      font-family: "e-sb-icons";
    }

    .search::before {
      content: "\e728";
      font-family: "e-sb-icons";
      font-size: 14px;
      position: absolute;
      top: 5px;
      left: 12%;
      font-weight: 800;
    }

    #search:hover {
      background-color: transparent !important;
    }

    .settings::before {
      content: "\e71d";
      font-family: "e-sb-icons";
    }

    span.e-input-group.e-control-wrapper.e-ddl {
      left: 12%;
    }

    .expand::before,
    .expand::before {
      content: "\e72d";
      margin-left: 18px;
      font-family: "e-sb-icons";
      position: absolute;
      top: 12%;
    }

    .right-content {
      float: right;
      height: 55px;
      width: 100px;
    }

    #right-sidebar {
      display: none;
    }

    .e-dock.e-close span.e-text {
      display: none;
    }

    .e-dock.e-open span.e-text {
      display: inline-block;
    }

    #dockSidebar li {
      list-style-type: none;
      cursor: pointer;
      padding: 5px;
    }

    #dockSidebar ul {
      padding: 0px;
    }

    span.e-icons {
      line-height: 2;
    }

    .e-open .e-icons {
      margin-right: 16px;
    }

    .analysis {
      font-size: 18px;
      padding: 12px;
      text-align: left;
      vertical-align: middle;
    }

    #search {
      margin-left: 10px;
      text-indent: 8px;
    }

    .searchContent .e-input-group.e-control-wrapper.e-ddl {
      height: 28px !important;
    }

    .piecontent .content {
      display: inline-block;
      padding: 4px;
      width: 31%;
      font-size: 13px;
      text-align: center;
    }

    .card-content.text {
      font-size: 15px;
      text-align: right;
      color: #66696b;
    }

    .card {
      margin-right: 5%;
      margin-top: 10%;
    }

    .card-content.number {
      font-size: 16px;
      text-align: right;
      padding-top: 10px;
    }

    .e-dashboardlayout.e-control.e-responsive {
      width: 100% !important;
      overflow: hidden;
    }

    .e-avatar.image {
      background-image: url('@Url.Content("~/Content/avatar/images/pic01.png")');
      background-repeat: no-repeat;
      background-size: cover;
      background-position: center;
    }

    #target {
      background: linear-gradient(-141deg, #eef5f7 14%, #eef2fb 100%);
    }

    .markerTemplate {
      font-size: 12px;
      color: white;
      text-shadow: 0px 1px 1px black;
      font-weight: 500;
    }

    .menu {
      display: inline-block;
      position: absolute;
      width: 60px;
      height: 55px;
      border-right: 1px solid rgba(0, 0, 0, 0.12);
    }

    .searchContent {
      display: inline-block;
      position: absolute;
      left: 60px;
    }

    .e-panel-content {
      height: calc(100% - 35px) !important;
      width: 100%;
    }

    .e-dock {
      padding-top: 8px;
    }

    .right-content div {
      display: inline-block;
    }

    .information {
      top: 15%;
      font-size: 12px;
      position: absolute;
    }

    .information span {
      float: left;
    }

    .text-content {
      font-size: 17px;
      line-height: 17px;
      margin-top: 10px;
      margin-left: 10px;

    }

    .card .e-icons {
      position: absolute;
      top: 20%;
      left: 12%;
      width: 60px;
      height: 60px;
      text-align: center;
      border: 1px solid;
      line-height: 60px;
      color: #25c3cb;
      background: #eef5f7;
      border-radius: 60px;
    }

    .card .home::before {
      font-size: 25px;
    }

    .dashboardParent {
      width: 100%;
    }
    #pie, #spline, #linechart, #pie1{
          width: 100% !important;
          height: 100% !important;
    }

    /* styles for highcontrast theme */

    body.highcontrast #sidebar-section{
        border: 1px solid #969696;
    }

    body.highcontrast .header{
        border-bottom: 1px solid #969696;
    }

    body.highcontrast #dockSidebar .e-icons::before {
        color: #fff;
    }

    body.highcontrast #dockSidebar li.sidebar-item.filterHover, body.highcontrast #dockSidebar {
        background: #000;
    }

</style>
<script>

    var loadLinechart = function (args) {
        var selectedTheme = location.hash.split('/')[1];
        selectedTheme = selectedTheme ? selectedTheme : 'Material';
        args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark");
    }
    var loadPiechart = function (args) {
        var selectedTheme = location.hash.split('/')[1];
        selectedTheme = selectedTheme ? selectedTheme : 'Material';
        args.accumulation.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark");
    }
    function mapsLoad(args) {
        var theme = location.hash.split('/')[1];
        theme = theme ? theme : 'Material';
        args.maps.theme = (theme.charAt(0).toUpperCase() + theme.slice(1));
            args.maps.layers[0].markerSettings = [
                        {
                            visible: true,
                            dataSource: [
                                { latitude: 37.6276571, longitude: -122.4276688, name: 'San Bruno' },
                                { latitude: 33.5302186, longitude: -117.7418381, name: 'Laguna Niguel' },
                                { latitude: 40.7424509, longitude: -74.0081468, name: 'New York' },
                                { latitude: -23.5268201, longitude: -46.6489927, name: 'Bom Retiro' },
                                { latitude: 43.6533855, longitude: -79.3729994, name: 'Toronto' },
                                { latitude: 48.8773406, longitude: 2.3299627, name: 'Paris' },
                                { latitude: 52.4643089, longitude: 13.4107368, name: 'Berlin' },
                                { latitude: 19.1555762, longitude: 72.8849595, name: 'Mumbai' },
                                { latitude: 35.6628744, longitude: 139.7345469, name: 'Minato' },
                                { latitude: 51.5326602, longitude: -0.1262422, name: 'London' }
                            ],
                            shape: 'Image',
                            imageUrl: '@Url.Content("~/Content/Maps/ballon.png")',
                            height: 20,
                            width: 20,
                            offset: {
                                y: -10,
                                x: 0
                            },
                            tooltipSettings: {
                                visible: true,
                                valuePath: 'name'
                            },
                            animationDuration: 0
                        },
                        {
                            visible: true,
                            tooltipSettings: {
                                visible: true
                            },
                            template: '<div id="marker1" class="markerTemplate">Asia' +
                                '</div>',
                            dataSource: [
                                { latitude: 50.32087157990324, longitude: 90.015625 }
                            ],
                            animationDuration: 0
                        },
                        {
                            visible: true,
                            template: '<div id="marker2" class="markerTemplate">Australia' +
                                '</div>',
                            dataSource: [
                                { latitude: -25.88583769986199, longitude: 134.296875 }
                            ],
                            animationDuration: 0
                        },
                        {
                            visible: true,
                            template: '<div id="marker3" class="markerTemplate">Africa' +
                                '</div>',
                            dataSource: [
                                { latitude: 16.97274101999902, longitude: 16.390625 }
                            ],
                            animationDuration: 0
                        },
                        {
                            visible: true,
                            template: '<div id="marker4" class="markerTemplate">Europe' +
                                '</div>',
                            dataSource: [
                                { latitude: 49.95121990866204, longitude: 18.468749999999998 }
                            ],
                            animationDuration: 0,
                        },
                        {
                            visible: true,
                            template: '<div id="marker5" class="markerTemplate" style="width:50px">North America' +
                                '</div>',
                            dataSource: [
                                { latitude: 59.88893689676585, longitude: -109.3359375 }
                            ],
                            animationDuration: 0
                        },
                        {
                            visible: true,
                            template: '<div id="marker6" class="markerTemplate" style="width:50px">South America' +
                                '</div>',
                            dataSource: [
                                { latitude: -6.64607562172573, longitude: -55.54687499999999 }
                            ],
                            animationDuration: 0
                        },
            ];
        }

    document.addEventListener('DOMContentLoaded', function () {
        var lineObj = document.getElementById('linechart').ej2_instances[0];
        var pieObj = document.getElementById('pie').ej2_instances[0];
        var mapObj = document.getElementById('maps').ej2_instances[0];
        var pieObj1 = document.getElementById('pie1').ej2_instances[0];
        var splineObj = document.getElementById('spline').ej2_instances[0];
        lineObj.refresh(); pieObj.refresh(); pieObj1.refresh(); splineObj.refresh(); mapObj.refresh();
    });

</script>